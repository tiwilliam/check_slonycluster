#!/bin/sh
#
# William Tis√§ter <william@defunct.cc>
#
# Alert if slony lags
# 

# check parameters are valid
if [[ $# -ne 3 ]]
then
  echo "Usage: $0 <master> <cluster name> <dbname>"
  exit 2
fi

# assign parameters
HOSTNAME=$1
CLUSTERNAME=$2
DBNAME=$3

TIME_BEHIND_WARN="900"
TIME_BEHIND_CRIT="3600"

# query the master database
nodelag=`/usr/bin/psql -h $HOSTNAME -c "select st_received, extract('epoch' from st_lag_time) from _${CLUSTERNAME}.sl_status ORDER BY st_lag_time DESC" -t $DBNAME`

if [ ! -n "$nodelag" ]; then
	exit 1
fi

IFS=$'\n'
for node in $nodelag; do
	lag=$(echo $node | cut -d '|' -f 2 | cut -d '.' -f 1 | awk '{ print $1 }')
	nodeid=$(echo $node | cut -d '|' -f 1 | awk '{ print $1 }')
	nodename=$(/usr/bin/psql -h $HOSTNAME -c "select pa_conninfo from _${CLUSTERNAME}.sl_path where pa_server = $nodeid limit 1" -t $DBNAME | sed 's/.*host\=\([^ ]\+\) .*/\1/')

	if [ ! -n "$nodename" ]; then
		exit 1
	fi

	if [ $lag -gt $TIME_BEHIND_CRIT ]; then
		string="${string}($nodename lagging $lag seconds) "
		critical=1
		continue
	fi

	if [ $lag -gt $TIME_BEHIND_WARN ]; then
		string="${string}($nodename lagging $lag seconds) "
		warning=1
		continue
	fi

	string="${string}($nodename $lag seconds) "
done

if [ ! -z $critical ]; then
	echo "CRITICAL: $string"
	exit 2
elif [ ! -z $warning ]; then
	echo "WARNING: $string"
	exit 1
else
	echo "OK: $string"
	exit 0
fi
